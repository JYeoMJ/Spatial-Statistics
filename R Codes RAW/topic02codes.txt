##Example 1
class(cars)
names(cars)
head(cars)

##Example 2
cars[c(2,5,6), ]
cars[c(2,5,6), "dist"]
cars$dist[c(2,5,6)]

##Example 3
set.seed(23)
ls1 <- list(A=rnorm(3), B=rnorm(5))
ls1
ls1[[2]]
ls1[["B"]]
ls1$B

##Example 4
# Continuing the with the object from above,
saveRDS(ls1, file="ls1.rds")
ls2 <- readRDS("ls1.rds")
ls2

##Example 5
hawkers <- readRDS("D:data/hawker.rds")
length(hawkers)
str(hawkers[[1]],max.level=1)
hawkers[[1]][[1]]

##Example 6
str(hawkers[[1]][[2]],max.level=1)

##Example 7
hw <- hawkers[[1]][-1]
addr <- function(x){
	x$ADDRESSSTREETNAME
	}
street_names <- sapply(hw, addr)
length(street_names)
street_names[1:2]

##Example 8
mod1 <- lm(dist~speed, data=cars)
class(mod1)
summary(mod1)

##Example 9
summary(cars)

##Example 10
library(sp)
getClass("Spatial")

##Example 11
m <- matrix(c(0,0,1,1), ncol=2, dimnames=list(NULL, c("min", "max")))
crs <- CRS(projargs=as.character(NA))
S <- Spatial(bbox=m, proj4string=crs)
S

##Example 12
CRAN_df <- read.table("D:data/CRAN051001a.txt", header=TRUE)
CRAN_mat <- cbind(CRAN_df$long, CRAN_df$lat)
row.names(CRAN_mat) <- 1:nrow(CRAN_mat)
llCRS <- CRS("+proj=longlat +ellps=WGS84")
CRAN_sp <- SpatialPoints(CRAN_mat, proj4string=llCRS)
summary(CRAN_sp)

brazil <- which(CRAN_df$loc == "Brazil")
plot(CRAN_sp[brazil,], axes=TRUE, col='blue',main='CRAN Mirrors in Brazil')

##Example 13
CRAN_spdf1 <- SpatialPointsDataFrame(CRAN_mat, CRAN_df, proj4string=llCRS, 
  match.ID=TRUE)
CRAN_spdf1[4,]
str(CRAN_spdf1, max.level=2)
str(CRAN_spdf1[["loc"]])

##Example 14
# Create the coordinates:
A_coords <- matrix(c(0,4,2,2), nrow=2, byrow=TRUE)
B_coords <- matrix(c(3,2,3,0), nrow=2, byrow=TRUE)
C_coords <- matrix(c(1,0,1,2), nrow=2, byrow=TRUE)
D_coords <- matrix(c(0,1,2,1), nrow=2, byrow=TRUE)
#
# Create the Line objects:
Line_A <- Line(A_coords)
Line_B <- Line(B_coords)
Line_C <- Line(C_coords)
Line_D <- Line(D_coords)
#
# Create the Lines objects:
Lines1 <- Lines(list(Line_A, Line_B), "AB")
Lines2 <- Lines(list(Line_C, Line_D), "CD")
#
# Create the SpatialLines object
SL <- SpatialLines(list(Lines1, Lines2))

plot(SL, col=c("red", "black"), lwd=3, axes=TRUE)
grid()
legend("topright", lwd=3, lty=1, col=c("red", "black"), 
       legend=c("AB", "CD"))

##Example 15
df <- data.frame(bumps=c(5.6, 10.2))
row.names(df) <- c("CD", "AB")
SLDF <- SpatialLinesDataFrame(SL, df, match.ID=TRUE)
slot(SLDF, "data")

##Example 16
library(maps)
library(maptools)
japan <- map("world", "japan", plot=FALSE)
p4s <- CRS("+proj=longlat +ellps=WGS84")
SLjapan <- map2SpatialLines(japan, proj4string=p4s)

num_obj=function(x){
	length(slot(x,"Lines"))
	}
l_lengths <- sapply(slot(SLjapan, "lines"), num_obj)
head(l_lengths)

##Example 17
A_coords <- matrix(c(0,0,
                     0,2,
                     2,2,
                     2,0,
                     0,0), ncol=2, byrow=TRUE)
A <- Polygons(list(Polygon(A_coords, hole=FALSE)), "A")
B_coords <- matrix(c(1,1,
                     1,3,
                     3,3,
                     4,2,
                     3,1,
                     1,1), ncol=2, byrow=TRUE)
B <- Polygons(list(Polygon(B_coords, hole=FALSE)), "B")
C_coords <- matrix(c(4,3,
                     4,4,
                     5,4,
                     5,3,
                     4,3), ncol=2, byrow=TRUE)
C <- Polygons(list(Polygon(C_coords, hole=FALSE)), "C")
len_3 <- SpatialPolygons(list(A, B, C), 1:3)
plot(len_3, axes=TRUE, main="3 Polygons or 1 Polygons?")
text(coordinates(len_3)[,1],
     coordinates(len_3)[,2], c("A", "B", "C"), pos=2)

plot(len_3, axes=TRUE, col=c("blue", "red", "green"),main="Plot Order = 1, 2, 3")

len_3_pO <- SpatialPolygons(list(A, B, C), pO=as.integer(c(2,1,3)))
plot(len_3_pO, axes=TRUE, col=c("blue", "red", "green"),main="Plot Order = 2, 1, 3")

##Example 18
D_coords <- matrix(c(0,0,
                     0,3,
                     3,3,
                     3,0,
                     0,0), ncol=2, byrow=TRUE)
D <- Polygon(D_coords, hole=FALSE)
E_coords <- matrix(c(1,1,
                     1,2,
                     2,2,
                     2,1,
                     1,1), ncol=2, byrow=TRUE)
E <- Polygon(E_coords, hole=TRUE)
DE <- Polygons(list(D,E), "DE")
DE <- SpatialPolygons(list(DE))
plot(DE, col='darkorchid4', axes=TRUE)

##Example 19
g <- GridTopology(c(0,0), c(1,1), c(3,3))
sg <- SpatialGrid(g)
plot(sg, axes=TRUE)

##Example 20
sgd <- SpatialGridDataFrame(sg, data.frame(val=1:9))
image(sgd,axes=TRUE)
cc = coordinates(sgd)
z = as.character(sgd[["val"]])
text(cc[,1], cc[,2], z)

##Example 21
sgd([1,1]
sgd[1:2,2:3]

##Example 22
set.seed(1)
is.na(sgd$val) <- sample(9, size=3)
sgd$val
sp1 <- as(sgd, "SpatialPixelsDataFrame")
slot(sp1, "grid.index")
